{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Fire Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "nvfUCappbADQ"
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import folium\n",
    "import geopandas as gpd\n",
    "import numpy as np\n",
    "import json"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--2020-05-15 13:48:46--  https://firms.modaps.eosdis.nasa.gov/data/active_fire/c6/shapes/zips/MODIS_C6_Global_24h.zip\n",
      "Resolving firms.modaps.eosdis.nasa.gov (firms.modaps.eosdis.nasa.gov)... 2001:4d0:241a:40c0::34, 198.118.194.34\n",
      "Connecting to firms.modaps.eosdis.nasa.gov (firms.modaps.eosdis.nasa.gov)|2001:4d0:241a:40c0::34|:443... connected.\n",
      "HTTP request sent, awaiting response... 200 OK\n",
      "Length: 272036 (266K) [application/zip]\n",
      "Saving to: ‘MODIS_C6_Global_24h.zip’\n",
      "\n",
      "MODIS_C6_Global_24h 100%[===================>] 265.66K   218KB/s    in 1.2s    \n",
      "\n",
      "2020-05-15 13:48:49 (218 KB/s) - ‘MODIS_C6_Global_24h.zip’ saved [272036/272036]\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# !wget https://firms.modaps.eosdis.nasa.gov/data/active_fire/c6/shapes/zips/MODIS_C6_Global_24h.zip\n",
    "# !mv MODIS_C6_Global_24h.zip ../data/shapeFiles/world"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "colab_type": "text",
    "id": "M0xkjKhdDy8A"
   },
   "source": [
    "Data: https://earthdata.nasa.gov/earth-observation-data/near-real-time/firms/active-fire-data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Archive:  ../data/shapeFiles/world/MODIS_C6_Global_24h.zip\n",
      " extracting: ../data/shapeFiles/world/MODIS_C6_Global_24h.cpg  \n",
      "  inflating: ../data/shapeFiles/world/MODIS_C6_Global_24h.dbf  \n",
      "  inflating: ../data/shapeFiles/world/MODIS_C6_Global_24h.prj  \n",
      "  inflating: ../data/shapeFiles/world/MODIS_C6_Global_24h.shp  \n",
      "  inflating: ../data/shapeFiles/world/MODIS_C6_Global_24h.shx  \n"
     ]
    }
   ],
   "source": [
    "loc = '../data/shapeFiles/world/'\n",
    "!unzip {loc}MODIS_C6_Global_24h.zip -d {loc}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "colab": {},
    "colab_type": "code",
    "id": "ub1iqVwWa5E4"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ACQ_DATE</th>\n",
       "      <th>ACQ_TIME</th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>LONGITUDE</th>\n",
       "      <th>FRP</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>2020-05-14</td>\n",
       "      <td>0015</td>\n",
       "      <td>-22.467</td>\n",
       "      <td>148.923</td>\n",
       "      <td>10.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2020-05-14</td>\n",
       "      <td>0015</td>\n",
       "      <td>-22.468</td>\n",
       "      <td>148.933</td>\n",
       "      <td>9.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2020-05-14</td>\n",
       "      <td>0015</td>\n",
       "      <td>-23.314</td>\n",
       "      <td>147.689</td>\n",
       "      <td>9.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>2020-05-14</td>\n",
       "      <td>0015</td>\n",
       "      <td>-23.316</td>\n",
       "      <td>147.700</td>\n",
       "      <td>9.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>2020-05-14</td>\n",
       "      <td>0015</td>\n",
       "      <td>-24.127</td>\n",
       "      <td>151.437</td>\n",
       "      <td>5.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7935</td>\n",
       "      <td>2020-05-15</td>\n",
       "      <td>0545</td>\n",
       "      <td>15.917</td>\n",
       "      <td>76.710</td>\n",
       "      <td>16.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7936</td>\n",
       "      <td>2020-05-15</td>\n",
       "      <td>0545</td>\n",
       "      <td>15.862</td>\n",
       "      <td>76.731</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7937</td>\n",
       "      <td>2020-05-15</td>\n",
       "      <td>0545</td>\n",
       "      <td>15.445</td>\n",
       "      <td>76.708</td>\n",
       "      <td>10.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7938</td>\n",
       "      <td>2020-05-15</td>\n",
       "      <td>0545</td>\n",
       "      <td>11.869</td>\n",
       "      <td>79.639</td>\n",
       "      <td>34.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7939</td>\n",
       "      <td>2020-05-15</td>\n",
       "      <td>0545</td>\n",
       "      <td>9.268</td>\n",
       "      <td>78.783</td>\n",
       "      <td>24.6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7940 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        ACQ_DATE ACQ_TIME  LATITUDE  LONGITUDE   FRP\n",
       "0     2020-05-14     0015   -22.467    148.923  10.8\n",
       "1     2020-05-14     0015   -22.468    148.933   9.8\n",
       "2     2020-05-14     0015   -23.314    147.689   9.2\n",
       "3     2020-05-14     0015   -23.316    147.700   9.4\n",
       "4     2020-05-14     0015   -24.127    151.437   5.2\n",
       "...          ...      ...       ...        ...   ...\n",
       "7935  2020-05-15     0545    15.917     76.710  16.5\n",
       "7936  2020-05-15     0545    15.862     76.731  20.0\n",
       "7937  2020-05-15     0545    15.445     76.708  10.4\n",
       "7938  2020-05-15     0545    11.869     79.639  34.2\n",
       "7939  2020-05-15     0545     9.268     78.783  24.6\n",
       "\n",
       "[7940 rows x 5 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "gdf = gpd.read_file(\"../data/shapeFiles/world/MODIS_C6_Global_24h.shp\")\n",
    "ax = gdf.plot(figsize=(10, 10))\n",
    "gdf = gdf[['ACQ_DATE', 'ACQ_TIME', 'LATITUDE','LONGITUDE','FRP']]\n",
    "pd.to_datetime(gdf['ACQ_DATE'] + ' ' + gdf['ACQ_TIME'])\n",
    "gdf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 583
    },
    "colab_type": "code",
    "id": "jyiXnln-dqsU",
    "outputId": "4c0586b5-e9ca-4d4a-f934-6e963ff3e114"
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'HeatMap' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-20-e9e97c803b0b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m                         \u001b[0mtiles\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"Stamen Terrain\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmin_lat\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_lat\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m105\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmin_lon\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m68\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_lon\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m97\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m                         )\n\u001b[0;32m----> 7\u001b[0;31m HeatMap(data=gdf.groupby(['LATITUDE', 'LONGITUDE']).sum().reset_index().values.tolist(), \n\u001b[0m\u001b[1;32m      8\u001b[0m         radius=8).add_to(fire_map)\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'HeatMap' is not defined"
     ]
    }
   ],
   "source": [
    "from folium.plugins import HeatMapWithTime\n",
    "\n",
    "fire_map = folium.Map(width = 800 ,height=660,\n",
    "                        zoom_start=7, control_scale = True,\n",
    "                        tiles=\"Stamen Terrain\",min_lat=6, max_lat=105, min_lon=68, max_lon=97,\n",
    "                        )\n",
    "HeatMapWithTime(data=gdf.groupby(['LATITUDE', 'LONGITUDE']).sum().reset_index().values.tolist(), \n",
    "        radius=8).add_to(fire_map)\n",
    "        \n",
    "fire_map.save('fire_map.html')\n",
    "fire_map"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "colab": {
   "name": "Fire Plot.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
